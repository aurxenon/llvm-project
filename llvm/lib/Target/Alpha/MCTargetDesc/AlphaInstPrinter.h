#ifndef LLVM_LIB_TARGET_ALPHA_INSTPRINTER_ALPHAINSTPRINTER_H
#define LLVM_LIB_TARGET_ALPHA_INSTPRINTER_ALPHAINSTPRINTER_H

#include "AlphaMCTargetDesc.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class MCOperand;

class AlphaInstPrinter : public MCInstPrinter {
public:
  AlphaInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                   const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

  void printRegName(raw_ostream &O, unsigned RegNo) const override;

  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                    const char *Modifier = nullptr);

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &OS);
  static const char *getRegisterName(unsigned RegNo,
                                     unsigned AltIdx = Alpha::ABIRegAltName);
};
} // namespace llvm

#endif // LLVM_LIB_TARGET_ALPHA_INSTPRINTER_ALPHAINSTPRINTER_H